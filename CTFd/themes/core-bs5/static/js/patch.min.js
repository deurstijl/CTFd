import{A as s,Q as c}from"./api.min.js";import"./fetch.min.js";import"./config.min.js";import"./_commonjsHelpers.min.js";function u(e,o){return{...e,...o}}function h(e){let o=[];for(let t in e)e.hasOwnProperty(t)&&o.push(encodeURIComponent(t)+"="+encodeURIComponent(e[t]));return o.join("&")}s.prototype.requestRaw=function(e,o,t,p,r,i,n,d){const l=i&&Object.keys(i).length?h(i):null,a=o+(l?"?"+l:"");p&&!Object.keys(p).length&&(p=void 0),fetch(a,{method:e,headers:r,body:p}).then(f=>f.json()).then(f=>{d.resolve(f)}).catch(f=>{d.reject(f)})};s.prototype.patch_user_public=function(e,o){e===void 0&&(e={});let t=c.defer(),p=this.domain,r="/users/{user_id}",i={},n={},d={};return n.Accept=["application/json"],n["Content-Type"]=["application/json"],r=r.replace("{user_id}",e.userId),e.userId===void 0?(t.reject(new Error("Missing required  parameter: userId")),t.promise):(this.request("PATCH",p+r,e,o,n,i,d,t),t.promise)};s.prototype.patch_user_private=function(e,o){e===void 0&&(e={});let t=c.defer(),p=this.domain,r="/users/me",i={},n={};return i.Accept=["application/json"],i["Content-Type"]=["application/json"],this.request("PATCH",p+r,e,o,i,{},n,t),t.promise};s.prototype.post_unlock_list=function(e,o){let t=c.defer(),p=this.domain,r="/unlocks",i={},n={};return i.Accept=["application/json"],i["Content-Type"]=["application/json"],this.request("POST",p+r,e,o,i,{},n,t),t.promise};s.prototype.post_notification_list=function(e,o){e===void 0&&(e={});let t=c.defer(),p=this.domain,r="/notifications",i={},n={},d={};return n.Accept=["application/json"],n["Content-Type"]=["application/json"],this.request("POST",p+r,e,o,n,i,d,t),t.promise};s.prototype.post_files_list=function(e,o){let t=c.defer(),p=this.domain,r="/files",i={},n={},d={};return n.Accept=["application/json"],n["Content-Type"]=["application/json"],this.requestRaw("POST",p+r,e,o,n,i,d,t),t.promise};s.prototype.patch_config=function(e,o){e===void 0&&(e={});let t=c.defer(),p=this.domain,r="/configs/{config_key}",i={},n={},d={};return n.Accept=["application/json"],n["Content-Type"]=["application/json"],r=r.replace("{config_key}",e.configKey),e.configKey===void 0?(t.reject(new Error("Missing required  parameter: configKey")),t.promise):(this.request("PATCH",p+r,e,o,n,i,d,t),t.promise)};s.prototype.patch_config_list=function(e,o){e===void 0&&(e={});let t=c.defer(),p=this.domain,r="/configs",i={},n={},d={};return n.Accept=["application/json"],n["Content-Type"]=["application/json"],i=u(e,i),this.request("PATCH",p+r,e,o,n,i,d,t),t.promise};s.prototype.post_tag_list=function(e,o){e===void 0&&(e={});let t=c.defer(),p=this.domain,r="/tags",i={},n={},d={};return n.Accept=["application/json"],n["Content-Type"]=["application/json"],i=u(e,i),this.request("POST",p+r,e,o,n,i,d,t),t.promise};s.prototype.patch_team_public=function(e,o){e===void 0&&(e={});let t=c.defer(),p=this.domain,r="/teams/{team_id}",i={},n={},d={};return n.Accept=["application/json"],n["Content-Type"]=["application/json"],r=r.replace("{team_id}",e.teamId),e.teamId===void 0?(t.reject(new Error("Missing required  parameter: teamId")),t.promise):(i=u(e,i),this.request("PATCH",p+r,e,o,n,i,d,t),t.promise)};s.prototype.post_challenge_attempt=function(e,o){e===void 0&&(e={});let t=c.defer(),p=this.domain,r="/challenges/attempt",i={},n={},d={};return n.Accept=["application/json"],n["Content-Type"]=["application/json"],i=u(e,i),this.request("POST",p+r,e,o,n,i,d,t),t.promise};s.prototype.get_hint=function(e){e===void 0&&(e={});let o=c.defer(),t=this.domain,p="/hints/{hint_id}",r={},i={},n={},d={};return n.Accept=["application/json"],n["Content-Type"]=["application/json"],p=p.replace("{hint_id}",e.hintId),e.hintId===void 0?(o.reject(new Error("Missing required  parameter: hintId")),o.promise):(delete e.hintId,i=u(e,i),this.request("GET",t+p,e,r,n,i,d,o),o.promise)};
